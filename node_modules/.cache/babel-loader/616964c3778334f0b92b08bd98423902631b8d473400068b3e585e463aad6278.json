{"ast":null,"code":"var _jsxFileName = \"/Users/sarii/Works/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // shallow copy (=share the same references)\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n  const result = calculateWinner(squares);\n  const isDraw = result && result.winner === \"Draw\";\n  const status = isDraw ? \"It's a Draw!\" : result ? \"Winner: \" + result.winner : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  const getSquareStyle = index => {\n    const winningLine = result && result.line;\n    return winningLine && winningLine.includes(index) ? {\n      backgroundColor: \"yellow\"\n    } : {};\n  };\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onSquareClick: () => handleClick(i),\n    style: getSquareStyle(i)\n  }, `square-${i}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n  const createRow = rowIndex => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(colIndex => renderSquare(rowIndex * 3 + colIndex))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  };\n  const ROW_NUM = 3;\n  const rows = Array.from({\n    length: ROW_NUM\n  }, (_, rowIndex) => createRow(rowIndex));\n  for (let i = 0; i < ROW_NUM; i++) {\n    const squaresInRow = [];\n    for (let j = 0; j < ROW_NUM; j++) {\n      const squareIndex = i * ROW_NUM + j;\n      squaresInRow.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[squareIndex],\n        onSquareClick: () => handleClick(squareIndex),\n        style: getSquareStyle(squareIndex)\n      }, `square-${squareIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this));\n    }\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squaresInRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), rows]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n  const moves = history.map((squares, move) => {\n    const ROW_NUM = 3;\n    const description = move ? `Go to move #${move} (${Math.floor(move / ROW_NUM)}, ${(move + 1) % ROW_NUM})` : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: currentMove === move ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"You are at move #\", move]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, `move-${move}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  });\n  const sortedMoves = ascendingOrder ? moves : moves.slice().reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleOrder,\n          children: \"Toggle Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: sortedMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"0nPoRNwJCm+SRZEmUzUg9M4Q6zQ=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  if (squares.every(square => square !== null)) {\n    return {\n      winner: \"Draw\"\n    };\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","result","isDraw","winner","status","getSquareStyle","index","winningLine","line","includes","backgroundColor","renderSquare","style","createRow","rowIndex","map","colIndex","ROW_NUM","rows","Array","from","length","_","squaresInRow","j","squareIndex","push","_c2","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","ascendingOrder","setAscendingOrder","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","toggleOrder","moves","move","description","Math","floor","sortedMoves","reverse","_c3","lines","a","b","c","every","square","$RefreshReg$"],"sources":["/Users/sarii/Works/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n\n  return (\n    <button \n      className=\"square\"\n      onClick={onSquareClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // shallow copy (=share the same references)\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n\n  const result = calculateWinner(squares);\n  const isDraw = result && result.winner === \"Draw\";\n  const status = isDraw\n    ? \"It's a Draw!\"\n    : result\n    ? \"Winner: \" + result.winner\n    : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n\n  const getSquareStyle = (index) => {\n    const winningLine = result && result.line;\n    return winningLine && winningLine.includes(index)\n      ? {backgroundColor: \"yellow\" }\n      : {};\n  };\n\n  const renderSquare = (i) => (\n    <Square \n      key={`square-${i}`} \n      value={squares[i]} \n      onSquareClick={() => handleClick(i)} \n      style={getSquareStyle(i)} /> \n  );\n\n  const createRow = (rowIndex) => {\n    <div className='board-row' key={rowIndex}>\n      {[0, 1, 2].map((colIndex) => renderSquare(rowIndex * 3 + colIndex))}\n    </div>\n  }\n\n  const ROW_NUM = 3;\n  const rows = Array.from({ length: ROW_NUM }, (_, rowIndex) => createRow(rowIndex))\n  for (let i = 0; i < ROW_NUM; i++) {\n    const squaresInRow = [];\n    for (let j = 0; j < ROW_NUM; j++) {\n      const squareIndex = i * ROW_NUM + j\n      squaresInRow.push(\n        <Square key={`square-${squareIndex}`} value={squares[squareIndex]} onSquareClick={() => handleClick(squareIndex)} style={getSquareStyle(squareIndex)} /> \n      );\n    }\n    rows.push(<div className='board-row'>{squaresInRow}</div>)\n  }\n\n  return (\n    <>\n      <div className='status'>{status}</div>\n      {rows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n\n  const moves = history.map((squares, move) => {\n    const ROW_NUM = 3\n    const description = \n      move ? `Go to move #${move} (${Math.floor(move / ROW_NUM)}, ${(move+1) % ROW_NUM})` : 'Go to game start';\n    return (\n      <li key={`move-${move}`}>\n        {currentMove === move ? (\n          <span>You are at move #{move}</span>\n        ) : (\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  const sortedMoves = ascendingOrder ? moves : moves.slice().reverse();\n\n\n  return (\n    <div className='game'>\n      <div className='game-board'>\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>\n          <button onClick={toggleOrder}>Toggle Order</button>\n        </div>\n        <ol>{sortedMoves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {winner: squares[a], line: lines[i]};\n    }\n  }\n  if (squares.every((square) => square !== null)) {\n    return { winner: \"Draw\" };\n  }\n  return null;\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}