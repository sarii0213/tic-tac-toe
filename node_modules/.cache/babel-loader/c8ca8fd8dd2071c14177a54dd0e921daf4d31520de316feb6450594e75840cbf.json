{"ast":null,"code":"var _jsxFileName = \"/Users/sarii/Works/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // shallow copy (=share the same references)\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n  const result = calculateWinner(squares);\n  const isDraw = result && result.winner === \"Draw\";\n  const status = isDraw ? \"It's a Draw!\" : result ? \"Winner: \" + result.winner : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), Array.from({\n      length: 3\n    })]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n  const moves = history.map((squares, move) => {\n    const ROW_NUM = 3;\n    const description = move ? `Go to move #${move} (${Math.floor(move / ROW_NUM)}, ${(move + 1) % ROW_NUM})` : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: currentMove === move ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"You are at move #\", move]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, `move-${move}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  });\n  const sortedMoves = ascendingOrder ? moves : moves.slice().reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleOrder,\n          children: \"Toggle Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: sortedMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"0nPoRNwJCm+SRZEmUzUg9M4Q6zQ=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  if (squares.every(square => square !== null)) {\n    return {\n      winner: \"Draw\"\n    };\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","result","isDraw","winner","status","Array","from","length","_c2","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","ascendingOrder","setAscendingOrder","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","toggleOrder","moves","map","move","ROW_NUM","description","Math","floor","sortedMoves","reverse","_c3","lines","a","b","c","line","every","square","$RefreshReg$"],"sources":["/Users/sarii/Works/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n\n  return (\n    <button \n      className=\"square\"\n      onClick={onSquareClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // shallow copy (=share the same references)\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n\n  const result = calculateWinner(squares);\n  const isDraw = result && result.winner === \"Draw\";\n  const status = isDraw\n    ? \"It's a Draw!\"\n    : result\n    ? \"Winner: \" + result.winner\n    : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n\n    return (\n      <>\n        <div className=\"status\">{status}</div>\n        {/* <div className=\"board-row\">\n          <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n          <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n          <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n          <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n          <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n          <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n          <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n        </div> */}\n         {Array.from({ length: 3})}\n      </>\n    );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n\n  const moves = history.map((squares, move) => {\n    const ROW_NUM = 3\n    const description = \n      move ? `Go to move #${move} (${Math.floor(move / ROW_NUM)}, ${(move+1) % ROW_NUM})` : 'Go to game start';\n    return (\n      <li key={`move-${move}`}>\n        {currentMove === move ? (\n          <span>You are at move #{move}</span>\n        ) : (\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  const sortedMoves = ascendingOrder ? moves : moves.slice().reverse();\n\n\n  return (\n    <div className='game'>\n      <div className='game-board'>\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>\n          <button onClick={toggleOrder}>Toggle Order</button>\n        </div>\n        <ol>{sortedMoves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {winner: squares[a], line: lines[i]};\n    }\n  }\n  if (squares.every((square) => square !== null)) {\n    return { winner: \"Draw\" };\n  }\n  return null;\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}